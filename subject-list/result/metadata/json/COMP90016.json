{
    "overview": [
        "<p><strong>AIM</strong></p>",
        "<p>The study of genomics is on the forefront of biology. Current laboratory technologies generate huge amounts of data and computational analysis is necessary to make sense of these data. This subject covers a broad range of approaches to the computational analysis of genomic data. Students will learn the theory behind a variety of different approaches to genomic analysis, and be introduced to key tools in current use, preparing them to use existing methods appropriately as well as developing new ways to analyse genomic data. Students will also have opportunities to apply their skills in workshops and assignments using both existing computational genomics tools and writing custom Python functions.</p>",
        "<p>Computational Genomics is a selective subject in the MSc (Bioinformatics) and is an elective in other courses. It can also be taken by PhD students and by undergraduate students, subject to the approval of the subject coordinator.</p>",
        "<p><strong>INDICATIVE CONTENT</strong></p>",
        "<p>This subject covers the computational analysis of several important forms of genomic data. Topics include computational resource management, reproducible research principles, genomics workflows, sequence alignment, genome annotation, parallel computing, metagenomics and single-cell sequencing. The subject domain rapidly progresses, and subject content is regularly revised and updated.</p>",
        "<p>Practical work includes writing bioinformatics functions with Python code, accessing genomics data repositories and using popular command-line tools.</p>"
    ],
    "ilo": [
        "Use and manipulate a range of data formats used in computational genomics",
        "Identify and describe commonly used computational approaches to processing genomic data and appropriately apply them",
        "Discuss the advantages and disadvantages of a variety of algorithms that underpin computational genomic analyses",
        "Design analysis workflows for novel scenarios using tools and methods discussed in the subject",
        "Write simple Python programs and use programming libraries to complete computational genomics tasks",
        "Demonstrate understanding of current challenges  in computational genomics and related fields",
        "Explain the role of computational genomics in solving modern biological challenges"
    ],
    "generic_skills": [
        "Independent critical thought, rational inquiry and self-directed learning and research",
        "Using available resources autonomously to acquire relevant knowledge",
        "Ability to undertake problem identification, formulation and solution",
        "Research data management",
        "Capacity for creativity and innovation",
        "Ability to communicate effectively with related disciplines to solve multidisciplinary problems"
    ],
    "elig_req": {
        "Prerequisites": [
            {
                "type": "table",
                "content": [
                    {
                        "Code": "COMP10001",
                        "Name": "Foundations of Computing",
                        "Teaching period": "Summer Term (On Campus - Parkville)Semester 1 (On Campus - Parkville)Semester 2 (On Campus - Parkville)",
                        "Credit Points": "12.5"
                    },
                    {
                        "Code": "COMP10002",
                        "Name": "Foundations of Algorithms",
                        "Teaching period": "Semester 1 (On Campus - Parkville)Semester 2 (On Campus - Parkville)",
                        "Credit Points": "12.5"
                    },
                    {
                        "Code": "COMP20005",
                        "Name": "Intro. to Numerical Computation in C",
                        "Teaching period": "Semester 2 (On Campus - Parkville)Semester 1 (On Campus - Parkville)",
                        "Credit Points": "12.5"
                    },
                    {
                        "Code": "COMP90041",
                        "Name": "Programming and Software Development",
                        "Teaching period": "Semester 1 (On Campus - Parkville)Semester 2 (On Campus - Parkville)",
                        "Credit Points": "12.5"
                    },
                    {
                        "Code": "COMP90059",
                        "Name": "Introduction to Programming",
                        "Teaching period": "Semester 2 (On Campus - Parkville)Semester 1 (On Campus - Parkville)",
                        "Credit Points": "12.5"
                    }
                ]
            },
            {
                "type": "paragraph",
                "content": "OR"
            },
            {
                "type": "paragraph",
                "content": "Admission into or selection of one of the following:"
            },
            {
                "type": "list",
                "content": [
                    "MC-SCICMP Master of Science (Computer Science)",
                    "MC-CS Master of Computer Science",
                    "MC-DATASC Master of Data Science",
                    "MC-BIOMENG Master of Biomedical Engineering",
                    "MC-SOFTENG Master of Software Engineering",
                    "Software specialisation (formal) in the MC-ENG Master of Engineering",
                    "Software with Business specialisation (formal) in the MC-ENG Master of Engineering",
                    "Biomedical specialisation (formal) in the MC-ENG Master of Engineering",
                    "Biomedical with Business specialisation (formal) in the MC-ENG Master of Engineering"
                ]
            }
        ],
        "Corequisites": [],
        "Non-allowed subjects": [],
        "Recommended background knowledge": [
            {
                "type": "paragraph",
                "content": "Passed one semester of a Python programming subject; OR"
            },
            {
                "type": "paragraph",
                "content": "Equivalent Python experience; OR"
            },
            {
                "type": "paragraph",
                "content": "Extensive experience with another programming language."
            }
        ],
        "Inherent requirements (core participation requirements)": [
            {
                "type": "paragraph",
                "content": "Further details on how to seek academic adjustments can be found on the Student Equity and Disability Support website:http://services.unimelb.edu.au/student-equity/home"
            }
        ]
    },
    "assessment": [
        {
            "brief": "Programming Assignment 1",
            "bullets": [
                "10 hours (of work required)"
            ],
            "hurdle": "Please see below",
            "timing": "From Week 4 to Week 5",
            "percentage": "10%"
        },
        {
            "brief": "Programming Assignment 2",
            "bullets": [
                "12 hours (of work required)"
            ],
            "hurdle": "Please see below",
            "timing": "From Week 7 to Week 8",
            "percentage": "15%"
        },
        {
            "brief": "Programming Assignment 3",
            "bullets": [
                "12 hours (of work required)"
            ],
            "hurdle": "Please see below",
            "timing": "From Week 10 to Week 11",
            "percentage": "15%"
        },
        {
            "brief": "Take-home programming examination",
            "bullets": [
                "12 hours (of work required)"
            ],
            "hurdle": "Please see below",
            "timing": "During the examination period",
            "percentage": "20%"
        },
        {
            "brief": "Written examination",
            "bullets": [
                "2 hours"
            ],
            "hurdle": "Please see below",
            "timing": "During the examination period",
            "percentage": "40%"
        },
        {
            "brief": null,
            "bullets": null,
            "hurdle": "To pass the subject, students must obtain at least: 50% weighted average (30/60) on the end-of-semester examination (including written and take-home programming examinations); and 50% weighted average (20/40) on the assignments.",
            "timing": "",
            "percentage": "N/A"
        }
    ],
    "date_times": [
        {
            "semester": "Semester 1",
            "principal_coordinator": "Steven Morgan",
            "mode_of_delivery": "On Campus (Parkville)",
            "contact_hours": "36 hours, comprised of two 1-hour lecture and one 1-hour workshop per week",
            "total_time_commitment": "180 hours",
            "teaching_period": "26 February 2024 to 26 May 2024",
            "last_self_enrol_date": "8 March 2024",
            "census_date": "3 April 2024",
            "last_date_to_withdraw_without_fail": "3 May 2024",
            "assessment_period_ends": "21 June 2024",
            "contact_name": "Administrative Coordination",
            "contact_email": "Past students, future students, general enquiries"
        }
    ]
}